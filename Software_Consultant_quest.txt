{
	"question" : "Which of the following is true about the use of modifiers?",
    "option1" : "If no accessibility modifier (public, protected, and private) is specified for a member declaration, the member is only accessible for classes in the package of its class and subclasses of its class anywhere",
    "option2" : "You cannot specify accessibility of local variables. They are only accessible within the block in which they are declared",
    "option3" : "Subclasses of a class must reside in the same package as the class they extend",
    "option4" : "Local variables can be declared static",
    "correctOption" : "You cannot specify accessibility of local variables. They are only accessible within the block in which they are declared",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "Which statement is not true in java language?",
    "option1" : "A public member of a class can be accessed in all the packages.",
    "option2" : "A private member of a class cannot be accessed by the methods of the same class.",
    "option3" : "A private member of a class cannot be accessed from its derived class.",
    "option4" : "A protected member of a class can be accessed from its derived class",
    "correctOption" : "A private member of a class cannot be accessed by the methods of the same class.",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "To prevent any method from overriding, we declare the method as,",
    "option1" : "static",
    "option2" : "const",
    "option3" : "final",
    "option4" : "abstract",
    "correctOption" : "final",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "Which one of the following is not true?",
    "option1" : "A class containing abstract methods is called an abstract class",
    "option2" : "Abstract methods should be implemented in the derived class",
    "option3" : "An abstract class cannot have non-abstract methods",
    "option4" : "A class must be qualified as ‘abstract’ class, if it contains one abstract method",
    "correctOption" : "An abstract class cannot have non-abstract methods",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "The fields in an interface are implicitly specified as,",
    "option1" : "static only",
    "option2" : "protected",
    "option3" : "private",
    "option4" : "both static and final",
    "correctOption" : "both static and final",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "Which of the following is not true?",
    "option1" : "An interface can extend another interface.",
    "option2" : "A class which is implementing an interface must implement all the methods of the interface",
    "option3" : "An interface can implement another interface.",
    "option4" : "An interface is a solution for multiple inheritance in java",
    "correctOption" : "An interface can implement another interface",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "Which of the following is true?",
    "option1" : "A finally block is executed before the catch block but after the try block",
    "option2" : "A finally block is executed, only after the catch block is executed",
    "option3" : "A finally block is executed whether an exception is thrown or not",
    "option4" : "A finally block is executed, only if an exception occurs",
    "correctOption" : "A finally block is executed whether an exception is thrown or not",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "A constructor",
    "option1" : "Must have the same name as the class it is declared within",
    "option2" : "Is used to create objects",
    "option3" : "May be declared private",
    "option4" : "all of above",
    "correctOption" : "all of above",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "What is byte code in the context of Java?",
    "option1" : "The type of code generated by a Java compiler",
    "option2" : "The type of code generated by a Java Virtual Machine",
    "option3" : "It is another name for a Java source file",
    "option4" : "It is the code written within the instance methods of a class",
    "correctOption" : "The type of code generated by a Java compiler",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "The java run time system automatically calls this method while garbage collection.",
    "option1" : "finalizer()",
    "option2" : "finalize()",
    "option3" : "finally()",
    "option4" : "finalized()",
    "correctOption" : "finalize()",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "The correct order of the declarations in a Java program is,",
    "option1" : "Package declaration, import statement, class declaration",
    "option2" : "Import statement, package declaration, class declaration",
    "option3" : "Import statement, class declaration, package declaration",
    "option4" : "Class declaration, import statement, package declaration",
    "correctOption" : "Package declaration, import statement, class declaration",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "An overloaded method consists of,",
    "option1" : "The same method name with different types and number of parameters",
    "option2" : "The same method name and same number and type of parameters with different return type",
    "option3" : "None",
    "option4" : "Both",
    "correctOption" : "The same method name with different types and number of parameters",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "A protected member can be accessed in,",
    "option1" : " a subclass of the same package ",
    "option2" : "a non-subclass of the same package",
    "option3" : "a subclass of different package",
    "option4" : "all of above",
    "correctOption" : "all of above",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "All exception types are subclasses of the built-in class",
    "option1" : "Exception",
    "option2" : "RuntimeException",
    "option3" : "Error",
    "option4" : "Throwable",
    "correctOption" : "Throwable",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "When an overridden method is called from within a subclass, it will always refer to the version of that method defined by the",
    "option1" : "Super class",
    "option2" : "Subclass",
    "option3" : "Compiler will choose randomly",
    "option4" : "Interpreter will choose randomly",
    "correctOption" : "Subclass",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "1"
}
------------------------------------------------------------Category 2----------10 questions--------------------
{
	"question" : "Mark the incorrect statement from the following:",
    "option1" : "Java is a fully object oriented language with strong support for proper software engineering techniques",
    "option2" : "In java it is not easy to write C-like so called procedural programs",
    "option3" : "In java language objects have to be manipulated",
    "option4" : "In java language error processing is built into the language",
    "correctOption" : "In java language error processing is built into the language",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "2"
}
{
	"question" : "In java, objects are passed as",
    "option1" : "Copy of that object",
    "option2" : "Method called call by value",
    "option3" : "Memory address",
    "option4" : "Constructor",
    "correctOption" : "Memory address",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "2"
}
{
	"question" : "Which of the following is not a component of Java Integrated Development Environment (IDE)?",
    "option1" : "Net Beans",
    "option2" : "Borland’s Jbuilder",
    "option3" : "Symantec’s Visual Café",
    "option4" : "Microsoft Visual Fox Pro",
    "correctOption" : "Symantec’s Visual Café",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "2"
}
{
	"question" : " An abstract data type typically comprises a …………… and a set of ……………… respectively.",
    "option1" : "Data representation, classes ",
    "option2" : "Data representation, operations",
    "option3" : "Database, operations",
    "option4" : "Control structure, operations",
    "correctOption" : "Data representation, operations.",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "2"
}
{
	"question" : "In object-oriented programming, the process by which one object acquires the properties of another object is called",
    "option1" : "Encapsulation",
    "option2" : "Polymorphism",
    "option3" : "Overloading",
    "option4" : "Inheritance",
    "correctOption" : "Inheritance ",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "2"
}
{
	"question" : "In Java, declaring a class abstract is useful",
    "option1" : "To prevent developers from further extending the class",
    "option2" : "When it doesn’t make sense to have objects of that class",
    "option3" : "When default implementations of some methods are not desirable",
    "option4" : " To force developers to extend the class not to use its capabilities",
    "correctOption" : "When it doesn’t make sense to have objects of that class",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "2"
}{
	"question" : "Object-oriented inheritance models the",
    "option1" : " 'is a kind of' relationship",
    "option2" : " 'has a' relationship",
    "option3" : " 'want to be' relationship",
    "option4" : "inheritance does not describe any kind of relationship between classes",
    "correctOption" : " 'is a kind of' relationship",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "2"
}
{
	"question" : "The wrapping up of data and functions into a single unit is called?",
    "option1" : "Encapsulation",
    "option2" : "Abstraction",
    "option3" : "Data Hiding",
    "option4" : "Polymorphism",
    "correctOption" : "Encapsulation ",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "2"
}
{
	"question" : "Polymorphism __",
    "option1" : " Is not supported by Java",
    "option2" : "Refers to the ability of two or more objects belonging to different classes to respond to exactly the same message in different class-specific ways",
    "option3" : "Simplifies code maintenance",
    "option4" : "Refers to the ability of two or more objects belonging to different classes to respond to exactly the same message in different class-specific ways and simplifies code maintenance",
    "correctOption" : "Refers to the ability of two or more objects belonging to different classes to respond to exactly the same message in different class-specific ways and simplifies code maintenance",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "2"
}
{
	"question" : "Which of these field declarations are legal within the body of an interface?",
    "option1" : "Private final static int answer = 42",
    "option2" : "public static int answer=42",
    "option3" : "final static answer =42",
    "option4" : "int answer",
    "correctOption" : "public static int answer=42",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "2"
}
-------------------------------------------Category 3----5 questions---------------------------------

{
	"question" : "Re-implementing an inherited method in a sub class to perform a different task from the parent class is called",
    "option1" : "Binding",
    "option2" : "Transferring",
    "option3" : "Hiding",
    "option4" : "extending",
    "correctOption" : "extending",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "3"
}

{
	"question" : "In a class definition, the special method provided to be called to create an instance of that class is known as a/an",
    "option1" : "Interpreter",
    "option2" : "Destructor",
    "option3" : "Constructor",
    "option4" : "Object",
    "correctOption" : "Constructor",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "3"
}

{
	"question" : "Which of these packages contain all the collection classes?",
    "option1" : "java.lang",
    "option2" : " java.util",
    "option3" : "java.net",
    "option4" : "java.awt",
    "correctOption" : "java.util",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "3"
}

{
	"question" : "Identify, from among the following, the incorrect descriptions related to Java :",
    "option1" : " Java Virtual Machine translates byte code into its own system’s machine language and runs the resulting machine code",
    "option2" : "The arithmetic operations *, /, %, + and – have the same level of precedence",
    "option3" : "Comments do not cause any action to be performed during the program execution",
    "option4" : "All variables must be given a type when they are declared",
    "correctOption" : "The arithmetic operations *, /, %, + and – have the same level of precedence",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "3"
}

{
	"question" : "Which of these classes is not part of Java’s collection framework?",
    "option1" : "Maps",
    "option2" : "Array",
    "option3" : "Stack",
    "option4" : "Queue",
    "correctOption" : "Queue",
	"position" : "Software Consultant",
    "tech" : "java",
    "category" : "3"
}