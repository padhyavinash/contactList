{
	"question" : "What can help us in avoiding NullPointeExceptions and null checks in java 8?",
    "option1" : "Optional",
    "option2" : "Required",
    "option3" : "NotNull",
    "option4" : "NotRequired",
    "correctOption" : "Optional",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "Synchronized resizable-array implementation of the List interface is _____________?",
    "option1" : "Vector",
    "option2" : "ArrayList",
    "option3" : "Hashtable",
    "option4" : "HashMap",
    "correctOption" : "Vector",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "Which method can be used to check null on an Optional variable in Java 8?",
    "option1" : "isPresent()",
    "option2" : "isNullable()",
    "option3" : "isPresentable()",
    "option4" : "isNotNull()",
    "correctOption" : "isPresent()",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "Which class does not override the equals() and hashCode() methods, inheriting them directly from class Object?",
    "option1" : "java.lang.String",
    "option2" : "java.lang.Double",
    "option3" : "java.lang.StringBuffer",
    "option4" : "java.lang.Character",
    "correctOption" : "java.lang.StringBuffer",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "Which collection class allows you to access its elements by associating a key with an element's value, and provides synchronization??",
    "option1" : "java.util.SortedMap",
    "option2" : "java.util.TreeMap",
    "option3" : "java.util.TreeSet",
    "option4" : "java.util.Hashtable",
    "correctOption" : "java.util.Hashtable",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "Which mechanism is used when a thread is paused running in its critical section and another thread is allowed to enter (or lock) in the same critical section to be executed?",
    "option1" : "Inter-thread communication",
    "option2" : "Initial-thread communication",
    "option3" : "Mutual Exclusive",
    "option4" : "None of the above()",
    "correctOption" : "Inter-thread communication",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "A process that involves recognizing and focusing on the important characteristics of a situation or object is known as?",
    "option1" : "Encapsulation",
    "option2" : "Polymorphism",
    "option3" : "Abstraction",
    "option4" : "Inheritance",
    "correctOption" : "Abstraction",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "Which statement is true regarding an object?",
    "option1" : "An object is not an instance of a class",
    "option2" : "An object is a reference to an attribute",
    "option3" : "An object is a variable",
    "option4" : "An object is an instance of a class",
    "correctOption" : "An object is an instance of a class",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}{
	"question" : "What is garbage collection in the context of Java?",
    "option1" : "The operating system periodically deletes all of the java files available on the system",
    "option2" : "Any package imported in a program and not used is automatically deleted",
    "option3" : "When all references to an object are gone, the memory used by the object is automatically reclaimed",
    "option4" : "The JVM checks the output of any Java program and deletes anything that doesn’t make sense",
    "correctOption" : "When all references to an object are gone, the memory used by the object is automatically reclaimed",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "Which of the following is a member of the java.lang package?",
    "option1" : "List",
    "option2" : "Queue",
    "option3" : "Math",
    "option4" : "Stack",
    "correctOption" : "Queue",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}

{
	"question" : "In Java, declaring a class abstract is useful",
    "option1" : "To prevent developers from further extending the class",
    "option2" : "When it doesn’t make sense to have objects of that class",
    "option3" : "When default implementations of some methods are not desirable",
    "option4" : " To force developers to extend the class not to use its capabilities",
    "correctOption" : "When it doesn’t make sense to have objects of that class",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}{
	"question" : "Object-oriented inheritance models the",
    "option1" : " 'is a kind of' relationship",
    "option2" : " 'has a' relationship",
    "option3" : " 'want to be' relationship",
    "option4" : "inheritance does not describe any kind of relationship between classes",
    "correctOption" : " 'is a kind of' relationship",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "The wrapping up of data and functions into a single unit is called?",
    "option1" : "Encapsulation",
    "option2" : "Abstraction",
    "option3" : "Data Hiding",
    "option4" : "Polymorphism",
    "correctOption" : "Encapsulation ",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "Polymorphism __",
    "option1" : " Is not supported by Java",
    "option2" : "Refers to the ability of two or more objects belonging to different classes to respond to exactly the same message in different class-specific ways",
    "option3" : "Simplifies code maintenance",
    "option4" : "Refers to the ability of two or more objects belonging to different classes to respond to exactly the same message in different class-specific ways and simplifies code maintenance",
    "correctOption" : "Refers to the ability of two or more objects belonging to different classes to respond to exactly the same message in different class-specific ways and simplifies code maintenance",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
{
	"question" : "Which of these field declarations are legal within the body of an interface?",
    "option1" : "Private final static int answer = 42",
    "option2" : "public static int answer=42",
    "option3" : "final static answer =42",
    "option4" : "int answer",
    "correctOption" : "public static int answer=42",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "1"
}
-----------------------------------------------------------Category 2------10 questions----------------------------


{
	"question" : "Basic Java language functions are stored in which of the following java package?",
    "option1" : " java.lang",
    "option2" : "java.io",
    "option3" : " java.net",
    "option4" : "java.util",
    "correctOption" : "java.lang",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "2"
}

{
	"question" : "Which of the following has a method names flush( )?",
    "option1" : "Input stream",
    "option2" : "Output Stream",
    "option3" : "Reader stream",
    "option4" : "Input reader stream",
    "correctOption" : "Output Stream",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "2"
}

{
	"question" : "What is the fundamental unit of information of writer streams?",
    "option1" : "Characters",
    "option2" : "Bytes",
    "option3" : "Files",
    "option4" : "Records",
    "correctOption" : "Characters",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "2"
}

{
	"question" : "File class is included in which package?",
    "option1" : "java.io package",
    "option2" : "java.lang package",
    "option3" : "java.awt package",
    "option4" : "java.net.package,
    "correctOption" : "java.io package",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "2"
}

{
	"question" : "URL stands for",
    "option1" : "Universal reader locator",
    "option2" : "Universal reform loader",
    "option3" : "Uniform resource loader",
    "option4" : "Uniform resource locator",
    "correctOption" : "Uniform resource locator",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "2"
}

{
	"question" : "Which of the following events will cause a thread to die?",
    "option1" : "The method sleep( ) is called",
    "option2" : "The method wait( ) is called",
    "option3" : "Execution of the start( ) method ends",
    "option4" : "Execution of the run( ) method ends",
    "correctOption" : "Execution of the run( ) method ends",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "2"
}

{
	"question" : "Which of the following statements are true regarding the finalize( ) method?",
    "option1" : "The finalize ( ) method must be declared with protected accessibility",
    "option2" : "The compiler will fail to compile the code that explicitly tries to call the finalize( ) method",
    "option3" : "The body of the finalize ( ) method can only access other objects that are eligible for garbage collection",
    "option4" : "The finalize ( ) method can be overloaded",
    "correctOption" : "The finalize ( ) method can be overloaded",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "2"
}

{
	"question" : "Which one of these is a valid method declaration?",
    "option1" : "void method1",
    "option2" : "void method2()",
    "option3" : "void method3(void)",
    "option4" : "method4()",
    "correctOption" : "void method2()",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "2"
}

{
	"question" : "Given a class named Book, which one of these is a valid constructor declaration for the class?",
    "option1" : "Book(Book b) { }",
    "option2" : "Book Book() { }",
    "option3" : "private final Book() { }",
    "option4" : "void Book() { }",
    "correctOption" : "Book(Book b) { }",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "2"
}

{
	"question" : "Which statement is true about accessibility of members?",
    "option1" : "Private members are always accessible from within the same package",
    "option2" : "Private members can only be accessed by code from within the class of the member",
    "option3" : "A member with default accessibility can be accessed by any subclass of the class in which it is defined",
    "option4" : "Private members cannot be accessed at all",
    "correctOption" : "Private members can only be accessed by code from within the class of the member",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "2"
}

--------------------------------------------------Category 3-------------5 questions--------------------

{
	"question" : "Which of the following is true about the use of modifiers?",
    "option1" : "If no accessibility modifier (public, protected, and private) is specified for a member declaration, the member is only accessible for classes in the package of its class and subclasses of its class anywhere",
    "option2" : "You cannot specify accessibility of local variables. They are only accessible within the block in which they are declared",
    "option3" : "Subclasses of a class must reside in the same package as the class they extend",
    "option4" : "Local variables can be declared static",
    "correctOption" : "You cannot specify accessibility of local variables. They are only accessible within the block in which they are declared",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "3"
}

{
	"question" : "Which statement is not true in java language?",
    "option1" : "A public member of a class can be accessed in all the packages.",
    "option2" : "A private member of a class cannot be accessed by the methods of the same class.",
    "option3" : "A private member of a class cannot be accessed from its derived class.",
    "option4" : "A protected member of a class can be accessed from its derived class",
    "correctOption" : "A private member of a class cannot be accessed by the methods of the same class.",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "3"
}

{
	"question" : "To prevent any method from overriding, we declare the method as,",
    "option1" : "static",
    "option2" : "const",
    "option3" : "final",
    "option4" : "abstract",
    "correctOption" : "final",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "3"
}

{
	"question" : "Which one of the following is not true?",
    "option1" : "A class containing abstract methods is called an abstract class",
    "option2" : "Abstract methods should be implemented in the derived class",
    "option3" : "An abstract class cannot have non-abstract methods",
    "option4" : "A class must be qualified as ‘abstract’ class, if it contains one abstract method",
    "correctOption" : "An abstract class cannot have non-abstract methods",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "3"
}

{
	"question" : "The fields in an interface are implicitly specified as,",
    "option1" : "static only",
    "option2" : "protected",
    "option3" : "private",
    "option4" : "both static and final",
    "correctOption" : "both static and final",
	"position" : "Software Engineer",
    "tech" : "java",
    "category" : "3"
}









